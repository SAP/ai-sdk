"use strict";(self.webpackChunksap_ai_sdk_documentation=self.webpackChunksap_ai_sdk_documentation||[]).push([[627],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>s});var o=i(6540);const t={},r=o.createContext(t);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(r.Provider,{value:n},e.children)}},9909:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"spring-ai/openai","title":"OpenAI Integration","description":"How to use our Spring AI integration with our OpenAI client in SAP AI Core for chat completion tasks using the SAP AI SDK for Java.","source":"@site/docs-java/spring-ai/openai.mdx","sourceDirName":"spring-ai","slug":"/spring-ai/openai","permalink":"/ai-sdk/docs/java/spring-ai/openai","draft":false,"unlisted":false,"editUrl":"https://github.com/SAP/ai-sdk/edit/main/docs-java/spring-ai/openai.mdx","tags":[],"version":"current","frontMatter":{"id":"openai","title":"OpenAI Integration","hide_title":false,"hide_table_of_contents":false,"description":"How to use our Spring AI integration with our OpenAI client in SAP AI Core for chat completion tasks using the SAP AI SDK for Java.","keywords":["sap","cloud","sdk","ai"]},"sidebar":"docsJavaSidebar","previous":{"title":"Orchestration Integration","permalink":"/ai-sdk/docs/java/spring-ai/orchestration"},"next":{"title":"AI Core Deployment","permalink":"/ai-sdk/docs/java/ai-core/ai-core-deployment"}}');var t=i(4848),r=i(8453);const a={id:"openai",title:"OpenAI Integration",hide_title:!1,hide_table_of_contents:!1,description:"How to use our Spring AI integration with our OpenAI client in SAP AI Core for chat completion tasks using the SAP AI SDK for Java.",keywords:["sap","cloud","sdk","ai"]},s=void 0,d={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Embedding",id:"embedding",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"This guide provides examples of how to use our Spring AI integration with our OpenAI client in SAP AI Core\nfor chat completion tasks using the SAP AI SDK for Java."}),"\n",(0,t.jsxs)(n.p,{children:["First, add the Spring AI dependency to your ",(0,t.jsx)(n.code,{children:"pom.xml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.springframework.ai</groupId>\n    <artifactId>spring-ai-commons</artifactId>\n    <version>1.0.0</version>\n</dependency>\n<dependency>\n    <groupId>org.springframework.ai</groupId>\n    <artifactId>spring-ai-model</artifactId>\n    <version>1.0.0</version>\n</dependency>\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"Spring AI Version",type:"note",children:(0,t.jsxs)(n.p,{children:["As of version ",(0,t.jsx)(n.code,{children:"1.10.0"})," the minimum required version for Spring AI is ",(0,t.jsx)(n.code,{children:"1.0.0"}),".\nPlease reefer the ",(0,t.jsx)(n.a,{href:"https://docs.spring.io/spring-ai/reference/upgrade-notes.html#upgrading-to-1-0-0-RC1",children:"official Spring AI upgrade guide"})," for details on how to upgrade from a previous milestone version."]})}),"\n",(0,t.jsx)(n.h2,{id:"embedding",children:"Embedding"}),"\n",(0,t.jsx)(n.p,{children:"Here is how to obtain embedding vectors for a list of strings:"}),"\n",(0,t.jsxs)(n.p,{children:["You first initialize the OpenAI client for your model of choice and attach it ",(0,t.jsx)(n.code,{children:"OpenAiSpringEmbeddingModel"})," object."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'OpenAiClient client = OpenAiClient.forModel(OpenAiModel.TEXT_EMBEDDING_3_SMALL);\nOpenAiSpringEmbeddingModel embeddingModel = new OpenAiSpringEmbeddingModel(client);\nList<String> texts = List.of("Hello", "World");\nfloat[] embeddings = embeddingModel.embed(texts);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Please find ",(0,t.jsx)(n.a,{href:"https://github.com/SAP/ai-sdk-java/tree/main/sample-code/spring-app/src/main/java/com/sap/ai/sdk/app/services/SpringAiOpenAiService.java",children:"an example in our Spring Boot application"}),"."]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);