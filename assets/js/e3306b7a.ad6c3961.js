"use strict";(self.webpackChunksap_ai_sdk_documentation=self.webpackChunksap_ai_sdk_documentation||[]).push([[6478],{1323:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"foundation-models/foundation-models","title":"Foundation Models","description":"How to use the SAP Cloud SDK for AI to perform tasks using foundation models deployed on SAP AI Core.","source":"@site/docs-js_versioned_docs/version-v1/foundation-models/foundation-models.mdx","sourceDirName":"foundation-models","slug":"/foundation-models/","permalink":"/ai-sdk/docs/js/foundation-models/","draft":false,"unlisted":false,"editUrl":"https://github.com/SAP/ai-sdk/edit/main/docs-js_versioned_docs/version-v1/foundation-models/foundation-models.mdx","tags":[],"version":"v1","frontMatter":{"id":"foundation-models","title":"Foundation Models","hide_title":false,"hide_table_of_contents":false,"description":"How to use the SAP Cloud SDK for AI to perform tasks using foundation models deployed on SAP AI Core.","keywords":["sap","cloud","sdk","ai","foundation","model"]},"sidebar":"docsJsSidebar","previous":{"title":"Chat Completion","permalink":"/ai-sdk/docs/js/orchestration/chat-completion"},"next":{"title":"Chat Completion","permalink":"/ai-sdk/docs/js/foundation-models/openai/chat-completion"}}');var t=o(4848),s=o(8453);const d={id:"foundation-models",title:"Foundation Models",hide_title:!1,hide_table_of_contents:!1,description:"How to use the SAP Cloud SDK for AI to perform tasks using foundation models deployed on SAP AI Core.",keywords:["sap","cloud","sdk","ai","foundation","model"]},a=void 0,r={},l=[{value:"Installation",id:"installation",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Client Initialization",id:"client-initialization",level:2},{value:"Custom Destination",id:"custom-destination",level:3},{value:"Custom Request Configuration",id:"custom-request-configuration",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@sap-ai-sdk/foundation-models"})," package incorporates generative AI foundation models into your AI activities in SAP AI Core and SAP AI Launchpad."]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ npm install @sap-ai-sdk/foundation-models\n"})}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.p,{children:["Refer to prerequisites outlined ",(0,t.jsx)(n.a,{href:"../overview-cloud-sdk-for-ai-js#prerequisites",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"client-initialization",children:"Client Initialization"}),"\n",(0,t.jsxs)(n.p,{children:["Initialize a client with the model name.\nIf model version is not specified, it is set to ",(0,t.jsx)(n.code,{children:"latest"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The current available clients are: - ",(0,t.jsx)(n.code,{children:"AzureOpenAiChatClient"})," - ",(0,t.jsx)(n.code,{children:"AzureOpenAiEmbeddingClient"})]}),"\n",(0,t.jsxs)(n.p,{children:["Take the ",(0,t.jsx)(n.code,{children:"AzureOpenAiChatClient"})," as an example, use the following code to initialize a client:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { AzureOpenAiChatClient } from '@sap-ai-sdk/foundation-models';\n\nconst client = new AzureOpenAiChatClient('gpt-4o');\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The deployment ID will be implicitly fetched from the ",(0,t.jsx)(n.code,{children:"default"})," resource group.\nBy default, the deployment information is cached for five minutes, including deployment ID, model name, and model version."]}),"\n",(0,t.jsxs)(n.p,{children:["When using other resource groups, you can specify the ",(0,t.jsx)(n.code,{children:"resourceGroup"})," parameter."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const client = new AzureOpenAiChatClient({\n  modelName: 'gpt-4o',\n  // modelVersion: '2024-08-06', // optional\n  resourceGroup: 'my-resource-group'\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:"Alternatively, you can also provide a deployment ID instead of model name (and model version)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const client = new AzureOpenAiChatClient({\n  // resourceGroup: 'my-resource-group', // optional\n  deploymentId: 'd1234'\n});\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.p,{children:"When initializing a client for using a foundation model, it is equivalent to provide - a combination of model name and model version - or deployment ID"}),(0,t.jsxs)(n.p,{children:["to identify a model within a ",(0,t.jsx)(n.a,{href:"https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/resource-groups?q=resource+group",children:"Resource Group"}),".\nIf multiple deployments were created with the same model name and version, the first deployment will be used."]})]}),"\n",(0,t.jsx)(n.h3,{id:"custom-destination",children:"Custom Destination"}),"\n",(0,t.jsx)(n.p,{children:"When initializing the client, it is possible to provide a custom destination for your SAP AI Core instance."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const client = await new AzureOpenAiChatClient('gpt-4o', {\n  destinationName: 'my-destination'\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["By default, the fetched destination is cached.\nTo disable caching, set the ",(0,t.jsx)(n.code,{children:"useCache"})," parameter to ",(0,t.jsx)(n.code,{children:"false"})," together with the ",(0,t.jsx)(n.code,{children:"destinationName"})," parameter."]}),"\n",(0,t.jsxs)(n.p,{children:["For more information about configuring a destination, refer to the ",(0,t.jsx)(n.a,{href:"../connecting-to-ai-core#using-a-destination",children:"Using a Destination"})," section."]}),"\n",(0,t.jsx)(n.h2,{id:"custom-request-configuration",children:"Custom Request Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["Set custom request configuration in the ",(0,t.jsx)(n.code,{children:"requestConfig"})," parameter when calling the ",(0,t.jsx)(n.code,{children:"run()"})," method of a client."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const response = await client.run(\n  {\n    ...\n  },\n  {\n    headers: {\n      'x-custom-header': 'custom-value'\n      // Add more headers here\n    },\n    params: {\n      // Add more parameters here\n    }\n    // Add more request configuration here\n  }\n);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This can be useful, e.g., to overwrite the API version of Azure OpenAI by defining the ",(0,t.jsx)(n.code,{children:"api-version"})," parameter in the ",(0,t.jsx)(n.code,{children:"params"})," object."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"{\n  params: {\n    'api-version': 'AZURE_OPENAI_API_VERSION'\n  }\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>a});var i=o(6540);const t={},s=i.createContext(t);function d(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);