"use strict";(self.webpackChunksap_ai_sdk_documentation=self.webpackChunksap_ai_sdk_documentation||[]).push([[627],{8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>s});var t=i(6540);const o={},a=t.createContext(o);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:n},e.children)}},9909:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"spring-ai/openai","title":"OpenAI Integration","description":"How to use our Spring AI integration with our OpenAI client in SAP AI Core for chat completion tasks using the SAP AI SDK for Java.","source":"@site/docs-java/spring-ai/openai.mdx","sourceDirName":"spring-ai","slug":"/spring-ai/openai","permalink":"/ai-sdk/docs/java/spring-ai/openai","draft":false,"unlisted":false,"editUrl":"https://github.com/SAP/ai-sdk/edit/main/docs-java/spring-ai/openai.mdx","tags":[],"version":"current","frontMatter":{"id":"openai","title":"OpenAI Integration","hide_title":false,"hide_table_of_contents":false,"description":"How to use our Spring AI integration with our OpenAI client in SAP AI Core for chat completion tasks using the SAP AI SDK for Java.","keywords":["sap","cloud","sdk","ai"]},"sidebar":"docsJavaSidebar","previous":{"title":"Orchestration Integration","permalink":"/ai-sdk/docs/java/spring-ai/orchestration"},"next":{"title":"AI Core Deployment","permalink":"/ai-sdk/docs/java/ai-core/ai-core-deployment"}}');var o=i(4848),a=i(8453);const r={id:"openai",title:"OpenAI Integration",hide_title:!1,hide_table_of_contents:!1,description:"How to use our Spring AI integration with our OpenAI client in SAP AI Core for chat completion tasks using the SAP AI SDK for Java.",keywords:["sap","cloud","sdk","ai"]},s=void 0,p={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Embedding",id:"embedding",level:2},{value:"Chat Completion",id:"chat-completion",level:2},{value:"Stream Chat Completion",id:"stream-chat-completion",level:2},{value:"Tool Calling",id:"tool-calling",level:2},{value:"Chat Memory",id:"chat-memory",level:2},{value:"Templates from Prompt Registry",id:"templates-from-prompt-registry",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"This guide provides examples of how to use our Spring AI integration with our OpenAI client in SAP AI Core\nfor chat completion tasks using the SAP AI SDK for Java."}),"\n",(0,o.jsxs)(n.p,{children:["First, add the Spring AI dependency to your ",(0,o.jsx)(n.code,{children:"pom.xml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"<dependencyManagement>\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.ai</groupId>\n      <artifactId>spring-ai-bom</artifactId>\n      <version>${spring-ai.version}</version>\n      <type>pom</type>\n      <scope>import</scope>\n    </dependency>\n  </dependencies>\n</dependencyManagement>\n\n<dependencies>\n  <dependency>\n    <groupId>org.springframework.ai</groupId>\n    <artifactId>spring-ai-commons</artifactId>\n  </dependency>\n  <dependency>\n    <groupId>org.springframework.ai</groupId>\n    <artifactId>spring-ai-model</artifactId>\n  </dependency>\n  <dependency>\n    <groupId>org.springframework.ai</groupId>\n    <artifactId>spring-ai-client-chat</artifactId>\n  </dependency>\n  <dependency>\n    <groupId>com.sap.ai.sdk.foundationmodels</groupId>\n    <artifactId>openai</artifactId>\n    <version>${ai-sdk.version}</version>\n  </dependency>\n</dependencies>\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Spring AI Version",type:"note",children:(0,o.jsxs)(n.p,{children:["As of version ",(0,o.jsx)(n.code,{children:"1.10.0"})," the minimum required version for Spring AI is ",(0,o.jsx)(n.code,{children:"1.0.0"}),".\nPlease refer to the ",(0,o.jsx)(n.a,{href:"https://docs.spring.io/spring-ai/reference/upgrade-notes.html#upgrading-to-1-0-0-RC1",children:"official Spring AI upgrade guide"})," for details on how to upgrade from a previous milestone version."]})}),"\n",(0,o.jsx)(n.h2,{id:"embedding",children:"Embedding"}),"\n",(0,o.jsx)(n.p,{children:"Here is how to obtain embedding vectors for a list of strings:"}),"\n",(0,o.jsxs)(n.p,{children:["You first initialize the OpenAI client for your model of choice and attach it ",(0,o.jsx)(n.code,{children:"OpenAiSpringEmbeddingModel"})," object."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'OpenAiClient client = OpenAiClient.forModel(OpenAiModel.TEXT_EMBEDDING_3_SMALL);\nOpenAiSpringEmbeddingModel embeddingModel = new OpenAiSpringEmbeddingModel(client);\nList<String> texts = List.of("Hello", "World");\nfloat[] embeddings = embeddingModel.embed(texts);\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Please find ",(0,o.jsx)(n.a,{href:"https://github.com/SAP/ai-sdk-java/tree/main/sample-code/spring-app/src/main/java/com/sap/ai/sdk/app/services/SpringAiOpenAiService.java",children:"an example in our Spring Boot application"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"chat-completion",children:"Chat Completion"}),"\n",(0,o.jsx)(n.p,{children:"The OpenAI client is integrated in Spring AI classes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'OpenAiClient openAiClient = OpenAiClient.forModel(OpenAiModel.GPT_4O_MINI);\nChatModel client = new OpenAiChatModel(openAiClient);\n\nPrompt prompt = new Prompt("What is the capital of France?");\nChatResponse response = client.call(prompt);\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Please find ",(0,o.jsx)(n.a,{href:"https://github.com/SAP/ai-sdk-java/tree/main/sample-code/spring-app/src/main/java/com/sap/ai/sdk/app/services/SpringAiOpenAiService.java",children:"an example in our Spring Boot application"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"stream-chat-completion",children:"Stream Chat Completion"}),"\n",(0,o.jsx)(n.p,{children:"It's possible to pass a stream of chat completion delta elements, e.g. from the application backend to the frontend in real-time."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'OpenAiClient openAiClient = OpenAiClient.forModel(OpenAiModel.GPT_4O_MINI);\nChatModel client = new OpenAiChatModel(openAiClient);\n\nPrompt prompt = new Prompt("Can you give me the first 100 numbers of the Fibonacci sequence?");\nFlux<ChatResponse> response = client.stream(prompt);\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Please find ",(0,o.jsx)(n.a,{href:"https://github.com/SAP/ai-sdk-java/tree/main/sample-code/spring-app/src/main/java/com/sap/ai/sdk/app/services/SpringAiOpenAiService.java",children:"an example in our Spring Boot application"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"tool-calling",children:"Tool Calling"}),"\n",(0,o.jsx)(n.p,{children:"First define a function that will be called by the LLM:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'class WeatherMethod {\n  enum Unit {C,F}\n  record Request(String location, Unit unit) {}\n  record Response(double temp, Unit unit) {}\n\n  @Tool(description = "Get the weather in location")\n  Response getCurrentWeather(@ToolParam Request request) {\n    int temperature = request.location.hashCode() % 30;\n    return new Response(temperature, request.unit);\n  }\n}\n'})}),"\n",(0,o.jsxs)(i,{children:[(0,o.jsx)("summary",{children:"What to consider:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Self-explanatory interfaces that avoid acronyms."}),"\n",(0,o.jsx)(n.li,{children:"Provide clear, humane readable error messages."}),"\n",(0,o.jsx)(n.li,{children:"Enriched data objects to avoid client-side data merging."}),"\n",(0,o.jsx)(n.li,{children:"Filter output to control size"}),"\n"]})]}),"\n",(0,o.jsx)(n.p,{children:"Then pass your tool to the model as follows."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'OpenAiClient openAiClient = OpenAiClient.forModel(OpenAiModel.GPT_4O_MINI);\nChatModel client = new OpenAiChatModel(openAiClient);\nvar options = new DefaultToolCallingChatOptions();\n\noptions.setToolCallbacks(List.of(ToolCallbacks.from(new WeatherMethod())));\n\nPrompt prompt = new Prompt("What is the weather in Potsdam and in Toulouse?", options);\n\nChatResponse response = client.call(prompt);\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Please find ",(0,o.jsx)(n.a,{href:"https://github.com/SAP/ai-sdk-java/tree/main/sample-code/spring-app/src/main/java/com/sap/ai/sdk/app/services/SpringAiOpenAiService.java",children:"an example in our Spring Boot application"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"chat-memory",children:"Chat Memory"}),"\n",(0,o.jsxs)(n.p,{children:["Create a Spring AI ",(0,o.jsx)(n.code,{children:"ChatClient"})," from our ",(0,o.jsx)(n.code,{children:"OpenAiChatModel"})," and add a chat memory advisor like so:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'OpenAiClient openAiClient = OpenAiClient.forModel(OpenAiModel.GPT_4O_MINI);\nChatModel client = new OpenAiChatModel(openAiClient);\n\nvar repository = new InMemoryChatMemoryRepository();\nvar memory = MessageWindowChatMemory.builder().chatMemoryRepository(repository).build();\nvar advisor = MessageChatMemoryAdvisor.builder(memory).build();\nvar cl = ChatClient.builder(client).defaultAdvisors(advisor).build();\n\nPrompt prompt1 = new Prompt("What is the capital of France?");\nString content1 = cl.prompt(prompt1).call().content();\n// content1 is "Paris"\n\nPrompt prompt2 = new Prompt("And what is the typical food there?");\nString content2 = cl.prompt(prompt2).call().content();\n// chat memory will remember that the user is inquiring about France.\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Please find ",(0,o.jsx)(n.a,{href:"https://github.com/SAP/ai-sdk-java/tree/main/sample-code/spring-app/src/main/java/com/sap/ai/sdk/app/services/SpringAiOpenAiService.java",children:"an example in our Spring Boot application"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"templates-from-prompt-registry",children:"Templates from Prompt Registry"}),"\n",(0,o.jsx)(n.p,{children:"You can use prompt templates stored in a prompt registry in your Spring AI application."}),"\n",(0,o.jsxs)(n.p,{children:["Please see this ",(0,o.jsx)(n.a,{href:"../ai-core/prompt-registry#using-templates-in-springai",children:"documentation"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);