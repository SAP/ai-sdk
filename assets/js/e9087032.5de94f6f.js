"use strict";(self.webpackChunksap_ai_sdk_documentation=self.webpackChunksap_ai_sdk_documentation||[]).push([[8407],{7807:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"langchain/orchestration","title":"Orchestration Integration","description":"How to integrate orchestration client of SAP Cloud SDK for AI into LangChain.","source":"@site/docs-js/langchain/orchestration.mdx","sourceDirName":"langchain","slug":"/langchain/orchestration","permalink":"/ai-sdk/docs/js/langchain/orchestration","draft":false,"unlisted":false,"editUrl":"https://github.com/SAP/ai-sdk/edit/main/docs-js/langchain/orchestration.mdx","tags":[],"version":"current","frontMatter":{"id":"orchestration","title":"Orchestration Integration","hide_title":false,"hide_table_of_contents":false,"description":"How to integrate orchestration client of SAP Cloud SDK for AI into LangChain.","keywords":["sap","cloud","sdk","ai","langchain","orchestration"]},"sidebar":"docsJsSidebar","previous":{"title":"LangChain","permalink":"/ai-sdk/docs/js/langchain/"},"next":{"title":"OpenAI Integration","permalink":"/ai-sdk/docs/js/langchain/openai"}}');var o=i(4848),s=i(8453);const a={id:"orchestration",title:"Orchestration Integration",hide_title:!1,hide_table_of_contents:!1,description:"How to integrate orchestration client of SAP Cloud SDK for AI into LangChain.",keywords:["sap","cloud","sdk","ai","langchain","orchestration"]},r=void 0,c={},l=[{value:"Client Initialization",id:"client-initialization",level:2},{value:"Custom Destination",id:"custom-destination",level:3},{value:"Chat Completion",id:"chat-completion",level:2},{value:"Resilience",id:"resilience",level:2},{value:"Retry",id:"retry",level:3},{value:"Timeout",id:"timeout",level:3},{value:"Limitations",id:"limitations",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"@sap-ai-sdk/langchain"})," packages provides ",(0,o.jsx)(n.code,{children:"OrchestrationClient"})," client for LangChain integration with orchestration service."]}),"\n",(0,o.jsx)(n.h2,{id:"client-initialization",children:"Client Initialization"}),"\n",(0,o.jsxs)(n.p,{children:["The client reuses the orchestration client from ",(0,o.jsx)(n.code,{children:"@sap-ai-sdk/orchestration"})," and implements ",(0,o.jsx)(n.a,{href:"https://js.langchain.com/docs/introduction",children:"LangChain's interface"}),".\nTherefore, the client initialization combines the configuration of the orchestration client and LangChain options."]}),"\n",(0,o.jsxs)(n.p,{children:["Similar to the orchestration client, the ",(0,o.jsx)(n.code,{children:"OrchestrationClient"})," LangChain client can be initialized with an orchestration configuration.\nRefer to ",(0,o.jsx)(n.a,{href:"../orchestration/chat-completion",children:"Orchestration Chat Completion"})," for more information about the configuration."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import { OrchestrationClient } from '@sap-ai-sdk/langchain';\n\nconst config: OrchestrationModuleConfig = {\n  llm: {\n    model_name: 'gpt-4o'\n  },\n  templating: {\n    template: [\n      { role: 'user', content: 'Give me a long introduction of {{?subject}}' }\n    ]\n  }\n};\nconst client = new OrchestrationClient(config);\n"})}),"\n",(0,o.jsx)(n.p,{children:"Optionally, you can also specify LangChain options, resource group in deployment config, and a custom destination."}),"\n",(0,o.jsx)(n.h3,{id:"custom-destination",children:"Custom Destination"}),"\n",(0,o.jsx)(n.p,{children:"When initializing the client, it is possible to provide a custom destination for your SAP AI Core instance."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"const client = new OrchestrationClient(\n  orchestrationConfig,\n  langchainOptions,\n  deploymentConfig,\n  { destinationName: 'my-destination' }\n);\n"})}),"\n",(0,o.jsxs)(n.p,{children:["By default, the fetched destination is cached.\nTo disable caching, set the ",(0,o.jsx)(n.code,{children:"useCache"})," parameter to ",(0,o.jsx)(n.code,{children:"false"})," together with the ",(0,o.jsx)(n.code,{children:"destinationName"})," parameter."]}),"\n",(0,o.jsxs)(n.p,{children:["For more information about configuring a destination, refer to the ",(0,o.jsx)(n.a,{href:"../connecting-to-ai-core#using-a-destination",children:"Using a Destination"})," section."]}),"\n",(0,o.jsx)(n.h2,{id:"chat-completion",children:"Chat Completion"}),"\n",(0,o.jsx)(n.p,{children:"Pass a message history and, in most cases, input parameters for the orchestration templating module."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"const systemMessage = new SystemMessage('Be a helpful assistant!');\nconst history = [systemMessage];\nconst response = await client.invoke(history, {\n  inputParams: { subject: 'Paris' }\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"resilience",children:"Resilience"}),"\n",(0,o.jsxs)(n.p,{children:["Use LangChain options such as ",(0,o.jsx)(n.code,{children:"maxRetries"})," and ",(0,o.jsx)(n.code,{children:"timeout"})," to provide resilience."]}),"\n",(0,o.jsx)(n.h3,{id:"retry",children:"Retry"}),"\n",(0,o.jsxs)(n.p,{children:["By default, LangChain client retries up to six times with exponential delay.\nTo modify this behavior, set the ",(0,o.jsx)(n.code,{children:"maxRetries"})," option during the client initialization."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"const client = new OrchestrationClient(orchestrationConfig, {\n  maxRetries: 0\n});\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"If the error is caused by input content filtering, the client will throw immediately without retrying."})}),"\n",(0,o.jsx)(n.h3,{id:"timeout",children:"Timeout"}),"\n",(0,o.jsxs)(n.p,{children:["By default, no timeout is set in the client.\nTo limit the maximum duration for the entire request including retries, specify a timeout in milliseconds when calling the ",(0,o.jsx)(n.code,{children:"invoke"})," method."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"const response = await client.invoke(messageHistory, { timeout: 10000 });\n"})}),"\n",(0,o.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,o.jsx)(n.p,{children:"Currently unsupported features are:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Streaming"}),"\n",(0,o.jsx)(n.li,{children:"Tool Calling"}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(6540);const o={},s=t.createContext(o);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);